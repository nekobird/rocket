@function border-radius($key: 'base') {
  @if map-has-key($border-radii, $key) == true {
    @return map-get($border-radii, $key);
  } @else {
    @return map-get($border-radii, 'base');
  }
}

@function font-family($key: 'base') {
  @if map-has-key($font-families, $key) == true {
    @return map-get($font-families, $key);
   } @else {
     @return map-get($font-families, 'base');
   }
}

@function font-size($key: 'base', $target: null) {
  @if $target == 'heading' {
    @if map-has-key($font-sizes-heading, $key) == true {
      @return map-get(map-get($font-sizes-heading, $key), 'font-size');
    } @else {
      @return map-get(map-get($font-sizes-heading, 'base'), 'font-size');
    }
  } @else if $target == 'display' {
    @if map-has-key($font-sizes-display, $key) == true {
      @return map-get(map-get($font-sizes-display, $key), 'font-size');
    } @else {
      @return map-get(map-get($font-sizes-display, 'base'), 'font-size');
    }
  } @else {
    @if map-has-key($font-sizes, $key) == true {
      @return map-get(map-get($font-sizes, $key), 'font-size');
    } @else {
      @return map-get(map-get($font-sizes, 'base'), 'font-size');
    }
  }
}

@function line-height($key: 'base', $target: null) {
  @if $target == 'heading' {
    @if map-has-key($font-sizes-heading, $key) == true {
      @return map-get(map-get($font-sizes-heading, $key), 'line-height');
    } @else {
      @return map-get(map-get($font-sizes-heading, 'base'), 'line-height');
    }
  } @else if $target == 'display' {
    @if map-has-key($font-sizes-display, $key) == true {
      @return map-get(map-get($font-sizes-display, $key), 'line-height');
    } @else {
      @return map-get(map-get($font-sizes-display, 'base'), 'line-height');
    }
  } @else {
    @if map-has-key($font-sizes, $key) == true {
      @return map-get(map-get($font-sizes, $key), 'line-height');
    } @else {
      @return map-get(map-get($font-sizes, 'base'), 'line-height');
    }
  }
}

@function get-line-height-px($font-size: 'base') {
  @return (line-height($font-size) * (base('font-size') * strip-unit(font-size($font-size)))) + 0px;
}

@function get-line-height-rem($font-size: 'base') {
  @return strip-unit(font-size($font-size)) * strip-unit(line-height($font-size)) + 0rem;
}

@mixin apply-font-size($key: 'base', $target: null) {
  font-size  :   font-size($key, $target);
  line-height: line-height($key, $target);
}

@function font-weight($weight: 'normal') {
  @if map-has-key($font-weights, $weight) == true {
    @return map-get($font-weights, $weight);
  } @else {
    @return 400;
  }
}

@function color($color: 'primary', $variant: 'base') {
  @if map-has-key($colors, $color) == true {
    @if map-has-key(map-get($colors, $color), $variant) == true {
      @return map-get(map-get($colors, $color), $variant);
    } @else {
      @return map-get(map-get($colors, $color), 'base');
    }
  } @else {
    @return map-get(map-get($colors, 'primary'), 'base');
  }
}

@function breakpoint($key: 'base') {
  @if map-has-key($breakpoints, $key) == true {
    @return map-get($breakpoints, $key);
  } @else {
    @return map-get($breakpoints, 'base');
  }
}

@function space($key: 'base') {
  @if map-has-key($spaces, $key) == true {
    @return map-get($spaces, $key);
  } @else {
    @return map-get($spaces, 'base');
  }
}

@function ui($key: 'base') {
  @return map-get($ui-base, $key);
}

@function base($key) {
  @return map-get($base, $key);
}